name: build and run corpus through fuzzers

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      fuzzer: parser
    steps:
    - name: test uploading to bintray
      run: |
        date > hej_bintray.txt
        curl -T hej_bintray.txt -upauldreik:${{ secrets.bintrayApiKey }} https://api.bintray.com/content/pauldreik/simdjson-fuzz-corpus/corpus/0/corpus/corpus.tar";override=1"
        curl -X POST            -upauldreik:${{ secrets.bintrayApiKey }} https://api.bintray.com/content/pauldreik/simdjson-fuzz-corpus/corpus/0/corpus/publish=1
    - name: install packages
      run: |
        sudo apt install ninja-build valgrind
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 8
    - uses: actions/checkout@v1
      with:
        ref: paul/fuzz_experiment      
    - name: list clang versions
      run: |
        ls /usr/bin/clang*
        which clang++
        clang++ --version
    - name: build all variants
      run: ./build_like_ossfuzz.sh      
    - name: run the fuzzer $fuzzer and build a corpus from thin air
      run: |
        mkdir -p out/$fuzzer
        build-ossfuzz-fast8/fuzz/fuzz_$fuzzer         out/$fuzzer -max_total_time=20
        build-ossfuzz-withavx/fuzz/fuzz_$fuzzer       out/$fuzzer -max_total_time=10
        build-ossfuzz-noavx/fuzz/fuzz_$fuzzer         out/$fuzzer -max_total_time=10
        build-ossfuzz-noavx8/fuzz/fuzz_$fuzzer        out/$fuzzer -max_total_time=10
        echo disable msan runs, it fails in the fuzzing engine
        echo build-ossfuzz-msan-noavx8/fuzz/fuzz_$fuzzer   out/$fuzzer -max_total_time=10 -reload=0
        echo build-ossfuzz-msan-withavx8/fuzz/fuzz_$fuzzer out/$fuzzer -max_total_time=10 -reload=0
        echo now have $(ls out/$fuzzer |wc -l) files in corpus
        tar cf corpus.tar out/
    - name: Save corpus for later
      uses: actions/upload-artifact@v1
      with:
        name: corpus
        path: corpus.tar
    - name: run corpus through valgrind
      run: |
        find out/$fuzzer -type f |xargs valgrind build-plain-noavx/fuzz/fuzz_$fuzzer  2>&1|tee valgrind-noavx.txt
        find out/$fuzzer -type f |xargs valgrind build-plain-normal/fuzz/fuzz_$fuzzer 2>&1|tee valgrind-normal.txt
        tar cf valgrind.tar valgrind-*txt
    - name: Save valgrind output
      uses: actions/upload-artifact@v1
      with:
        name: valgrindresults
        path: valgrind.tar
